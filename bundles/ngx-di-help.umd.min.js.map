{"version":3,"sources":["ng://ngx-di-help/lib/di-help.config.ts","ng://ngx-di-help/lib/api/di-help.service.ts","ng://ngx-di-help/lib/di-help/di-help.component.ts","ng://ngx-di-help/lib/di-help/di-help.module.ts","ng://ngx-di-help/lib/di-help-faq/di-help-faq.component.ts","ng://ngx-di-help/lib/di-help-faq/di-help-faq.module.ts"],"names":["DI_HELP_URL_TOKEN","InjectionToken","DI_HELP_CACHE_LIFETIME_TOKEN","DiHelpService","diHelpUrlResolver","diHelpUrl","cacheLifetimeSecond","http","this","cacheById","requestCacheById","cacheByUid","requestCacheByUid","cacheByUrl","requestCacheByUrl","resolved","resolve","of","isObservable","Error","cacheLifetime","prototype","getArticleById","id","_this","pipe","flatMap","baseAddress","cachedGet","getArticleByUrl","url","encodeURIComponent","getArticleByUid","siteUrl","uid","getFaqBySiteId","get","headers","ignoreLoadingBar","map","a","getFaqBySiteUrl","cache","requestCache","key","httpUrl","error","throwError","article","tap","catchError","e","finalize","setTimeout","share","Injectable","DiHelpUrlResolver","Inject","args","HttpClient","DiHelpComponent","diHelpService","router","changeDetector","alwaysVisible","inline","Object","defineProperty","_articleId","value","byLocation","articleUid","subscribe","markForCheck","_articleUid","articleId","location","origin","_byLocation","updateFromLocation","routerEventsSubscription","events","filter","event","NavigationEnd","unsubscribe","ngOnDestroy","pathname","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","Router","ChangeDetectorRef","Input","DiHelpModule","forRoot","config","ngModule","providers","provide","useValue","isNaN","NgModule","imports","CommonModule","NgxPopperModule","declarations","exports","DiHelpFaqComponent","_siteId","articles","allArticles","applyFilter","ngOnInit","siteId","query_1","toLowerCase","Name","includes","ShortText","DiHelpFiles","some","f","Links","l","DiHelpFaqModule"],"mappings":"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","sourcesContent":["import { Provider, InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport abstract class DiHelpUrlResolver {\n    abstract resolve(): string | Observable<string>;\n}\n\nexport interface DiHelpConfig {\n    diHelpUrl?: string;\n    diHelpUrlResolver?: Provider;\n    cacheLifetimeSecond?: number,\n}\n\nexport const DI_HELP_URL_TOKEN = new InjectionToken<string>('DI_HELP_URL');\nexport const DI_HELP_CACHE_LIFETIME_TOKEN = new InjectionToken<string>('DI_HELP_CACHE_LIFETIME');\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, throwError, isObservable } from 'rxjs';\nimport { map, catchError, tap, share, finalize, flatMap } from 'rxjs/operators';\nimport { ArticleClientDto } from './article-client-dto';\nimport { DiHelpUrlResolver, DI_HELP_URL_TOKEN, DI_HELP_CACHE_LIFETIME_TOKEN } from '../di-help.config';\n\ninterface ICacheEntry {\n    article?: ArticleClientDto;\n    error?: any;\n}\n\nexport const cacheLifetimeSecondDefault = 30 * 60;\n\n@Injectable()\nexport class DiHelpService {\n\n    private readonly cacheLifetime: number;\n\n    private readonly cacheById: { [id: number]: ICacheEntry } = {};\n    private readonly requestCacheById: { [id: number]: Observable<ArticleClientDto> } = {};\n    private readonly cacheByUid: { [uid: string]: ICacheEntry } = {};\n    private readonly requestCacheByUid: { [uid: string]: Observable<ArticleClientDto> } = {};\n    private readonly cacheByUrl: { [url: string]: ICacheEntry } = {};\n    private readonly requestCacheByUrl: { [url: string]: Observable<ArticleClientDto> } = {};\n\n    private readonly diHelpUrl: Observable<string>;\n\n    constructor(\n        diHelpUrlResolver: DiHelpUrlResolver,\n        @Inject(DI_HELP_URL_TOKEN) diHelpUrl: string,\n        @Inject(DI_HELP_CACHE_LIFETIME_TOKEN) cacheLifetimeSecond: number,\n        private readonly http: HttpClient,\n    ) {\n        if (diHelpUrlResolver) {\n            const resolved = diHelpUrlResolver.resolve();\n            if (typeof resolved === 'string') {\n                this.diHelpUrl = of(resolved);\n            } else if (isObservable(resolved)) {\n                this.diHelpUrl = resolved;\n            } else {\n                throw Error('Not supported diHelpUrlResolver');\n            }\n        } else if (diHelpUrl) {\n            this.diHelpUrl = of(diHelpUrl);\n        } else {\n            throw Error('Please, configure diHelpUrl or diHelpUrlResolver');\n        }\n\n        this.cacheLifetime = cacheLifetimeSecond * 1000;\n    }\n\n    getArticleById(id: number): Observable<ArticleClientDto> {\n        return this.diHelpUrl.pipe(flatMap(baseAddress => this.cachedGet(\n            this.cacheById,\n            this.requestCacheById,\n            id,\n            `${baseAddress}/api/Articles/GetArticleById/${id}`)));\n    }\n\n    getArticleByUrl(url: string): Observable<ArticleClientDto> {\n        return this.diHelpUrl.pipe(flatMap(baseAddress => this.cachedGet(\n            this.cacheByUrl,\n            this.requestCacheByUrl,\n            url,\n            `${baseAddress}/api/Articles/GetArticleByUrl/?url=${encodeURIComponent(url)}`)));\n    }\n\n    getArticleByUid(siteUrl: string, uid: string): Observable<ArticleClientDto> {\n        return this.diHelpUrl.pipe(flatMap(baseAddress => this.cachedGet(\n            this.cacheByUid,\n            this.requestCacheByUid,\n            uid,\n            `${baseAddress}/api/Articles/GetArticleByUid/?siteUrl=${encodeURIComponent(siteUrl)}&uid=${encodeURIComponent(uid)}`)));\n    }\n\n    getFaqBySiteId(id: number): Observable<ArticleClientDto[]> {\n        return this.diHelpUrl.pipe(flatMap(baseAddress => this.http\n            .get(`${baseAddress}/api/Articles/GetFaqBySiteId/${id}`, {\n                headers: { ignoreLoadingBar: '' }\n            })\n            .pipe(map(a => a as ArticleClientDto[]))));\n    }\n\n    getFaqBySiteUrl(siteUrl: string): Observable<ArticleClientDto[]> {\n        return this.diHelpUrl.pipe(flatMap(baseAddress => this.http\n            .get(`${baseAddress}/api/Articles/GetFaqBySiteUrl/?siteUrl=${encodeURIComponent(siteUrl)}`, {\n                headers: { ignoreLoadingBar: '' }\n            })\n            .pipe(map(a => a as ArticleClientDto[]))));\n    }\n\n    private cachedGet(\n        cache: { [id: number]: ICacheEntry } | { [url: string]: ICacheEntry },\n        requestCache: { [id: number]: Observable<ArticleClientDto> } | { [id: number]: Observable<ArticleClientDto> },\n        key: number | string,\n        httpUrl: string\n    ): Observable<ArticleClientDto> {\n        if (cache[key]) {\n            return cache[key].error ? throwError(cache[key].error) : of(cache[key].article);\n        }\n\n        if (requestCache[key]) return requestCache[key];\n\n        requestCache[key] = this.http\n            .get(httpUrl, {\n                headers: { ignoreLoadingBar: '' }\n            })\n            .pipe(\n                map(a => a as ArticleClientDto),\n                tap(a => {\n                    delete requestCache[key];\n                    cache[key] = {\n                        article: a,\n                    };\n                }),\n                catchError(e => {\n                    delete requestCache[key];\n                    cache[key] = {\n                        error: e,\n                    };\n                    return throwError(e);\n                }),\n                finalize(() => {\n                    setTimeout(() => delete cache[key], this.cacheLifetime);\n                }),\n                share());\n\n        return requestCache[key];\n    }\n}\n","import { Component, Input, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { IArticleClientDto } from '../api/article-client-dto';\nimport { DiHelpService } from '../api/di-help.service';\n\n@Component({\n    selector: 'di-help',\n    templateUrl: './di-help.template.html',\n    styleUrls: ['./di-help.style.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DiHelpComponent implements OnDestroy {\n\n    article: IArticleClientDto;\n\n    private routerEventsSubscription: Subscription;\n    private _articleId: number;\n    private _articleUid: string;\n    private _byLocation: boolean;\n\n    @Input()\n    get articleId(): number {\n        return this._articleId;\n    }\n    set articleId(value: number) {\n        if (this.byLocation) throw Error('Do not use articleId with byLocation');\n        if (this.articleUid) throw Error('Do not use articleId with articleUid');\n\n        if (this._articleId === value) return;\n\n        this._articleId = value;\n\n        if (!value) return;\n        this.diHelpService.getArticleById(value)\n            .subscribe(article => {\n                this.article = article;\n                this.changeDetector.markForCheck();\n            }, () => {\n                this.article = null;\n                this.changeDetector.markForCheck();\n            });\n    }\n\n    @Input()\n    get articleUid(): string {\n        return this._articleUid;\n    }\n    set articleUid(value: string) {\n        if (this.byLocation) throw Error('Do not use articleUid with byLocation');\n        if (this.articleId) throw Error('Do not use articleUid with article-id');\n\n        if (this._articleUid === value) return;\n\n        this._articleUid = value;\n\n        if (!value) return;\n        this.diHelpService.getArticleByUid(location.origin, value)\n            .subscribe(article => {\n                this.article = article;\n                this.changeDetector.markForCheck();\n            }, () => {\n                this.article = null;\n                this.changeDetector.markForCheck();\n            });\n    }\n\n    @Input()\n    get byLocation(): boolean {\n        return this._byLocation;\n    }\n    set byLocation(value: boolean) {\n        if (this.articleId) throw Error('Do not use byLocation with articleId');\n        if (this.articleUid) throw Error('Do not use byLocation with articleUid');\n\n        if (this._byLocation === value) return;\n\n        this._byLocation = value;\n\n        if (value) {\n            this.updateFromLocation();\n            this.routerEventsSubscription = this.router.events\n                .pipe(filter(event => event instanceof NavigationEnd))\n                .subscribe(() => {\n                    this.updateFromLocation();\n                });\n        } else {\n            if (this.routerEventsSubscription) {\n                this.routerEventsSubscription.unsubscribe();\n            }\n        }\n    }\n\n    @Input()\n    alwaysVisible: boolean = true;\n\n    @Input()\n    inline: boolean = false;\n\n    constructor(\n        private readonly diHelpService: DiHelpService,\n        private readonly router: Router,\n        private readonly changeDetector: ChangeDetectorRef\n    ) { }\n\n    ngOnDestroy(): void {\n        if (this.routerEventsSubscription) {\n            this.routerEventsSubscription.unsubscribe();\n        }\n    }\n\n    private updateFromLocation(): void {\n        this.diHelpService.getArticleByUrl(location.origin + location.pathname)\n            .subscribe(article => {\n                this.article = article;\n                this.changeDetector.markForCheck();\n            }, () => {\n                this.article = null;\n                this.changeDetector.markForCheck();\n            });\n    }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxPopperModule } from 'ngx-popper';\nimport { DiHelpComponent } from './di-help.component';\nimport { DiHelpService, cacheLifetimeSecondDefault } from '../api/di-help.service';\nimport { DiHelpConfig, DI_HELP_URL_TOKEN, DI_HELP_CACHE_LIFETIME_TOKEN } from '../di-help.config';\nimport { DiHelpUrlResolver } from '../di-help.config';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NgxPopperModule\n    ],\n    declarations: [\n        DiHelpComponent\n    ],\n    exports: [\n        DiHelpComponent\n    ]\n})\nexport class DiHelpModule {\n    static forRoot(config: DiHelpConfig): ModuleWithProviders {\n        return {\n            ngModule: DiHelpModule,\n            providers: [\n                config.diHelpUrlResolver || { provide: DiHelpUrlResolver, useValue: null },\n                {\n                    provide: DI_HELP_URL_TOKEN,\n                    useValue: config.diHelpUrl,\n                },\n                {\n                    provide: DI_HELP_CACHE_LIFETIME_TOKEN,\n                    useValue: isNaN(config.cacheLifetimeSecond) ? cacheLifetimeSecondDefault : config.cacheLifetimeSecond,\n                },\n                DiHelpService\n            ]\n        };\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { IArticleClientDto } from '../api/article-client-dto';\nimport { DiHelpService } from '../api/di-help.service';\n\n@Component({\n    selector: 'di-help-faq',\n    templateUrl: './di-help-faq.template.html'\n})\nexport class DiHelpFaqComponent implements OnInit {\n\n    articles: IArticleClientDto[];\n\n    private _siteId: number;\n    private allArticles: IArticleClientDto[];\n\n    @Input()\n    get siteId(): number {\n        return this._siteId;\n    }\n    set siteId(value: number) {\n        if (this._siteId === value) return;\n\n        this._siteId = value;\n\n        if (!value) return;\n        this.diHelpService.getFaqBySiteId(value).subscribe(articles => {\n            this.allArticles = articles;\n            this.applyFilter();\n        }, () => {\n            this.allArticles = null;\n            this.applyFilter();\n        });\n    }\n\n    constructor(private readonly diHelpService: DiHelpService) { }\n\n    ngOnInit(): void {\n        if (!this.siteId) {\n            this.diHelpService.getFaqBySiteUrl(location.origin).subscribe(articles => {\n                this.allArticles = articles;\n                this.applyFilter();\n            }, () => {\n                this.allArticles = null;\n                this.applyFilter();\n            });\n        }\n    }\n\n    applyFilter(filter: string = '') {\n        if (filter) {\n            const query = filter.toLowerCase();\n            this.articles = this.allArticles.filter(a =>\n                a.Name.toLowerCase().includes(query)\n                || a.ShortText.toLowerCase().includes(query)\n                || (a.DiHelpFiles && a.DiHelpFiles.some(f => f.Name.toLowerCase().includes(query)))\n                || (a.Links && a.Links.some(l => l.Name.toLowerCase().includes(query))));\n        } else {\n            this.articles = this.allArticles;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DiHelpFaqComponent } from './di-help-faq.component';\nimport { DiHelpService } from '../api/di-help.service';\nimport { DiHelpModule } from '../di-help/di-help.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DiHelpModule\n    ],\n    declarations: [\n        DiHelpFaqComponent\n    ],\n    exports: [\n        DiHelpFaqComponent\n    ],\n    providers: [\n        DiHelpService\n    ]\n})\nexport class DiHelpFaqModule { }\n"]}